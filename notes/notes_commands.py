from notes.models import Note
from datetime import datetime
from rich.prompt import Prompt
from storage.file_handler_notes import save_notes, load_notes
from rich.console import Console
from rich.table import Table
from helpers.rich_output import console


notes = load_notes()


def add_notes():
    name_note = Prompt.ask("[bold green]–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –Ω–æ—Ç–∞—Ç–∫–∏[/bold green]")
    body_note = Prompt.ask("[bold blue]–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –Ω–æ—Ç–∞—Ç–∫–∏[/bold blue]")
    tag_note = Prompt.ask("[bold green]–í–≤–µ–¥—ñ—Ç—å —Ç–µ–≥ –∞–±–æ 'skip'[/bold green]")

    if tag_note.lower() == "skip":
        tag_note = None
    else:
        tag_note = tag_note.strip()
        if not tag_note.startswith("#"):
            tag_note = f"#{tag_note}"

    note = Note(name_note, body_note, tag_note)
    notes.append(note)
    save_notes(notes)
    return f"–ù–æ—Ç–∞—Ç–∫—É '{name_note}' —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!"


def show_notes():
    if not notes:
        return "–£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ—ó –Ω–æ—Ç–∞—Ç–∫–∏"

    table = Table(title="–ü–µ—Ä–µ–ª—ñ–∫ —Ç–≤–æ—ó—Ö –Ω–æ—Ç–∞—Ç–æ–∫", show_lines=True)

    table.add_column("‚Ññ–ø/–ø", style="white", justify="center")
    table.add_column("–ù–∞–∑–≤–∞", style="cyan", justify="center")
    table.add_column("–¢–µ–∫—Å—Ç", style="white", justify="center")
    table.add_column("–¢–µ–≥", style="blue", justify="center")
    table.add_column("–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è", style="green", justify="center")

    for index, note in enumerate(notes, start=1):
        table.add_row(
            str(index),
            note.name_note,
            note.body_note,
            note.tag_note if note.tag_note else "-",
            note.date_created.strftime("%d.%m.%Y"),
        )

    return table

def find_note():
    keyword = Prompt.ask("[bold green]–í–≤–µ–¥—ñ—Ç—å –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ –∞–±–æ #—Ç–µ–≥[/bold green]").lower()

    found = []
    for note in notes:
        if (
            keyword in note.name_note.lower()
            or keyword in note.body_note.lower()
            or (note.tag_note and keyword in note.tag_note.lower())
        ):
            found.append(note)

    if not found:
        return "üîç –ó–∞ –∑–∞–ø–∏—Ç–æ–º –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."

    table = Table(title=f"üîé –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –∑–∞ '{keyword}'", show_lines=True)
    table.add_column("‚Ññ", style="white", justify="center")
    table.add_column("–ù–∞–∑–≤–∞", style="cyan", justify="center")
    table.add_column("–¢–µ–∫—Å—Ç", style="white", justify="center")
    table.add_column("–¢–µ–≥", style="blue", justify="center")
    table.add_column("–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è", style="green", justify="center")

    for idx, note in enumerate(found, start=1):
        table.add_row(
            str(idx),
            note.name_note,
            note.body_note,
            note.tag_note or "-",
            note.date_created.strftime("%d.%m.%Y"),
        )
    return table
